pipeline {
    agent {
       node {
        label 'AGENT-1'
        
       }
    }
    
    // environment variables //
    environment { 
        packageVersion = ''
        nexusURL = '54.236.60.205:8081'
    }
    // give time limits to run pipeline //
    options {
        timeout(time: 1, unit: 'HOURS') 
        disableConcurrentBuilds() 
    }
    parameters {
        booleanParam(name: 'deploy', defaultValue: false, description: 'Toggle this value')
    }

    // build ///
    stages {
        stage('Get the version') {
            steps {
                script {
                     def packageJson = readJSON file: 'package.json'
                     packageVersion = packageJson.version
                     echo "the application version is :::: $packageVersion"
                }
                
            }
        }
        stage('Install Dependencies') {
            steps {
                sh """
                   npm install
                """     
                }
                
            }
            stage('unit tests') {
            steps {
                sh """
                   echo "unit test will run here"
                """     
                }
                
            }
            stage('sonar scanning') {
            steps {
                sh """
                   sonar-scanner
                """     
                }
                
            }

        
        stage('Build') {
            steps {
                sh """
                 ls -la
                 zip  -q -r catalogue.zip ./* -x ".git" -x "*.zip"
                 ls -ltr
                 """
            }
        }
        stage('Publish Artifact') {
            steps {
                nexusArtifactUploader(
                        nexusVersion: 'nexus3',
                        protocol: 'http',
                        nexusUrl: "${nexusURL}",
                        groupId: 'com.roboshop',
                        version: "${packageVersion}",
                        repository: 'catalogue-dev',
                        credentialsId: 'nexus-auth',
                        artifacts: [
                            [artifactId: 'catalogue-dev',
                            classifier: '',
                            file: 'catalogue.zip',
                            type: 'zip']
        ]
     )
            }
        }
        stage('Deploy') {
            when {
                expression {
                    params.deploy == 'true'
               }
            }
            steps {
                 script {
                        def params = [
                            string(name: 'version', value: "$packageVersion"),
                            string(name: 'environment', value: "dev")
                        ]
                        build job: "catalogue-deploy", wait: true, parameters: params
                    }
            }
        }

        
    }
    /// post //
     post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success {
            echo 'i will always tell hiii when pipeline is success'
        }
        failure {
            echo ' i will say check once when pipeline is failure'
        }    
} 
    }

